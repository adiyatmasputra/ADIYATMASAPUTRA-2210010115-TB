
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */
public class Aset extends javax.swing.JFrame {
    private DefaultTableModel tableModel;
    /**
     * Creates new form Aset
     */
    public Aset() {
        initComponents();
        
        tableModel = new DefaultTableModel(new String[]{"ID", "Nama", "Kategori", "Jumlah", "Tanggal"}, 0);
        table.setModel(tableModel);
        
        btnTambah.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                tambahAset();
            }
        });

        btnEdit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                editAset();
            }
        });

        btnHapus.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                hapusAset();
            }
        });

        btnRefresh.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                loadTable();
            }
        });

        loadTable(); // Muat data awal ke tabel
        
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int selectedRow = table.getSelectedRow(); // Ambil indeks baris yang dipilih

                // Set nilai dari tabel ke text field
//                txtID.setText(tableModel.getValueAt(selectedRow, 0).toString());
                txtNama.setText(tableModel.getValueAt(selectedRow, 1).toString());
                txtKategori.setText(tableModel.getValueAt(selectedRow, 2).toString());
                txtJumlah.setText(tableModel.getValueAt(selectedRow, 3).toString());
                txtTanggal.setText(tableModel.getValueAt(selectedRow, 4).toString());
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        txtJumlah = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        txtNama = new javax.swing.JTextField();
        txtTanggal = new javax.swing.JTextField();
        txtKategori = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));

        table.setBackground(new java.awt.Color(153, 255, 255));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nama", "Kategori", "Jumlah", "Tanggal"
            }
        ));
        jScrollPane1.setViewportView(table);

        btnEdit.setBackground(new java.awt.Color(153, 255, 255));
        btnEdit.setText("Ubah");

        btnTambah.setBackground(new java.awt.Color(153, 255, 255));
        btnTambah.setText("Tambah");

        btnRefresh.setBackground(new java.awt.Color(153, 255, 255));
        btnRefresh.setText("Refresh");

        btnHapus.setBackground(new java.awt.Color(153, 255, 255));
        btnHapus.setText("Hapus");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Nama Aset");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Kategori");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Jumlah");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Tanggal");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(99, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNama))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void tambahAset() {
        String nama = txtNama.getText();
        String kategori = txtKategori.getText();
        int jumlah = Integer.parseInt(txtJumlah.getText());
        String tanggal = txtTanggal.getText();

        try (Connection conn = DatabaseConnection.connect()) {
            String query = "INSERT INTO aset (nama_aset, kategori, jumlah, tanggal_masuk) VALUES (?, ?, ?, ?)";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, nama);
            pstmt.setString(2, kategori);
            pstmt.setInt(3, jumlah);
            pstmt.setString(4, tanggal);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Aset berhasil ditambahkan!");
            loadTable();
            clearField();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void editAset() {
        int selectedRow = table.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin diubah!");
            return;
        }

        int id = Integer.parseInt(tableModel.getValueAt(selectedRow, 0).toString());
        String nama = txtNama.getText();
        String kategori = txtKategori.getText();
        int jumlah = Integer.parseInt(txtJumlah.getText());
        String tanggal = txtTanggal.getText();

        try (Connection conn = DatabaseConnection.connect()) {
            String query = "UPDATE aset SET nama_aset = ?, kategori = ?, jumlah = ?, tanggal_masuk = ? WHERE id_aset = ?";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, nama);
            pstmt.setString(2, kategori);
            pstmt.setInt(3, jumlah);
            pstmt.setString(4, tanggal);
            pstmt.setInt(5, id);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Aset berhasil diperbarui!");
            loadTable();
            clearField();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void hapusAset() {
        int selectedRow = table.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data yang ingin dihapus!");
            return;
        }

        int id = Integer.parseInt(tableModel.getValueAt(selectedRow, 0).toString());

        try (Connection conn = DatabaseConnection.connect()) {
            String query = "DELETE FROM aset WHERE id_aset = ?";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setInt(1, id);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Aset berhasil dihapus!");
            loadTable();
            clearField();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void loadTable() {
        tableModel.setRowCount(0);
        try (Connection conn = DatabaseConnection.connect()) {
            String query = "SELECT * FROM aset";
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);

            while (rs.next()) {
                tableModel.addRow(new Object[]{
                        rs.getInt("id_aset"),
                        rs.getString("nama_aset"),
                        rs.getString("kategori"),
                        rs.getInt("jumlah"),
                        rs.getString("tanggal_masuk")
                });
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void clearField() {
        txtNama.setText("");
        txtKategori.setText("");
        txtJumlah.setText("");
        txtTanggal.setText("");
    }

    
    public static void insertTransaksi(int idAset, String jenis, int jumlah, String tanggal) {
        try {
            Connection conn = DatabaseConnection.connect();
            String query = "INSERT INTO transaksi (id_aset, jenis_transaksi, jumlah, tanggal_transaksi) VALUES (?, ?, ?, ?)";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setInt(1, idAset);
            pstmt.setString(2, jenis);
            pstmt.setInt(3, jumlah);
            pstmt.setString(4, tanggal);
            pstmt.executeUpdate();
            System.out.println("Transaksi berhasil ditambahkan!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
//    public static void updateTransaksi(int idTransaksi, int idAset, String jenis, int jumlah, String tanggal) {
//        try {
//            Connection conn = DatabaseConnection.connect();
//            String query = "UPDATE transaksi SET id_aset = ?, jenis_transaksi = ?, jumlah = ?, tanggal_transaksi = ? WHERE id_transaksi = ?";
//            PreparedStatement pstmt = conn.prepareStatement(query);
//            pstmt.setInt(1, idAset);
//            pstmt.setString(2, jenis);
//            pstmt.setInt(3, jumlah);
//            pstmt.setString(4, tanggal);
//            pstmt.setInt(5, idTransaksi);
//            pstmt.executeUpdate();
//            System.out.println("Transaksi berhasil diperbarui!");
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }
//    
//    public static void readTransaksi() {
//        try {
//            Connection conn = DatabaseConnection.connect();
//            String query = "SELECT * FROM transaksi";
//            PreparedStatement pstmt = conn.prepareStatement(query);
//            ResultSet rs = pstmt.executeQuery();
//
//            System.out.println("Daftar Transaksi:");
//            while (rs.next()) {
//                System.out.println("ID Transaksi: " + rs.getInt("id_transaksi") +
//                                   ", ID Aset: " + rs.getInt("id_aset") +
//                                   ", Jenis Transaksi: " + rs.getString("jenis_transaksi") +
//                                   ", Jumlah: " + rs.getInt("jumlah") +
//                                   ", Tanggal: " + rs.getString("tanggal_transaksi"));
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }
//    
//    public static void deleteTransaksi(int idTransaksi) {
//        try {
//            Connection conn = DatabaseConnection.connect();
//            String query = "DELETE FROM transaksi WHERE id_transaksi = ?";
//            PreparedStatement pstmt = conn.prepareStatement(query);
//            pstmt.setInt(1, idTransaksi);
//            pstmt.executeUpdate();
//            System.out.println("Transaksi berhasil dihapus!");
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }




    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Aset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Aset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Aset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Aset.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Aset().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtJumlah;
    private javax.swing.JTextField txtKategori;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtTanggal;
    // End of variables declaration//GEN-END:variables
}
